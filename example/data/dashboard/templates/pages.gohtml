{{define "statsPage"}}
    <div class="content-wrapper">
        <div class="page-header">
            <h2>Live Statistics</h2>
            <button type="button" class="icon-only" id="refreshStatsBtn" title="Refresh">
                <svg class="btn-icon" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"
                     xmlns="http://www.w3.org/2000/svg">
                    <path d="M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8" stroke-linecap="round"
                          stroke-linejoin="round"></path>
                    <path d="M21 3v5h-5" stroke-linecap="round" stroke-linejoin="round"></path>
                </svg>
            </button>
        </div>
        <div class="top-grid">
            <div class="card stat-card"><h2>Total Hits</h2>
                <p id="total-hits">0</p></div>
            <div class="card stat-card"><h2>Unique IPs</h2>
                <p id="unique-ips">0</p></div>
            <div class="card stat-card"><h2>Unique Agents</h2>
                <p id="unique-agents">0</p></div>
            <div class="card" id="application-info-card">
                <div class="card-header"><h3>Application Info</h3></div>
                <div class="card-content">
                    <ul class="vitals-list" id="application-info-list"></ul>
                </div>
            </div>
        </div>

        <div class="card table-container">
            <div class="card-header">
                <h3>IP Address Analysis</h3>
                <button type="button" class="secondary show-all-btn" data-table="ips">Show Top 5</button>
            </div>
            <table id="ips-table">
                <thead>
                <tr>
                    <th class="sortable" data-sort="last_seen">Status</th>
                    <th class="sortable" data-sort="ip_address">IP Address</th>
                    <th class="sortable" data-sort="total_hits">Hits</th>
                    <th class="sortable" data-sort="last_seen">Last Seen</th>
                </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

        <div class="card table-container" style="margin-top: 1.5rem;">
            <div class="card-header">
                <h3>User Agent Analysis</h3>
                <button type="button" class="secondary show-all-btn" data-table="agents">Show Top 5</button>
            </div>
            <table id="agents-table">
                <thead>
                <tr>
                    <th class="sortable" data-sort="last_seen">Status</th>
                    <th class="sortable" data-sort="user_agent">User Agent</th>
                    <th class="sortable" data-sort="total_hits">Hits</th>
                    <th class="sortable" data-sort="last_seen">Last Seen</th>
                </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
{{end}}

{{define "whitelistPage"}}
    <div class="content-wrapper" style="max-width: 900px;">
        <div class="page-header">
            <h2>Manage Whitelists</h2>
            <button class="icon-only" id="refreshWhitelistBtn" title="Refresh" type="button">
                <svg class="btn-icon" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"
                     xmlns="http://www.w3.org/2000/svg">
                    <path d="M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8" stroke-linecap="round"
                          stroke-linejoin="round"></path>
                    <path d="M21 3v5h-5" stroke-linecap="round" stroke-linejoin="round"></path>
                </svg>
            </button>
        </div>
        <p class="page-description">
            Whitelisted clients bypass the tarpit and receive a standard 404 Not Found response. Use exact matching for
            IP addresses and User Agents.
        </p>
        <div class="card">
            <div class="card-content">
                <div class="tab-nav" id="whitelist-tab-nav">
                    <button class="tab-btn active" data-type="ip">IP Addresses</button>
                    <button class="tab-btn" data-type="useragent">User Agents</button>
                </div>
                <div id="ip-panel" class="tab-panel active">
                    <form class="add-whitelist-form" id="add-ip-whitelist-form" data-scope="whitelist:write">
                        <input id="addIpValue" placeholder="e.g., 1.2.3.4" required>
                        <button type="submit">Add IP</button>
                        <button type="button" class="secondary import-whitelist-btn" data-type="ip">Import .txt</button>
                    </form>
                    <ul class="whitelist-list" id="ip-whitelist-list"></ul>
                </div>
                <div id="useragent-panel" class="tab-panel">
                    <form class="add-whitelist-form" id="add-useragent-whitelist-form" data-scope="whitelist:write">
                        <input id="addUserAgentValue" placeholder="e.g., Googlebot/2.1" required>
                        <button type="submit">Add User Agent</button>
                        <button type="button" class="secondary import-whitelist-btn" data-type="useragent">Import .txt
                        </button>
                    </form>
                    <ul class="whitelist-list" id="useragent-whitelist-list"></ul>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "templatesPage"}}
    <div class="content-wrapper">
        <div class="grid template-grid">
            <div class="card">
                <div class="card-header">
                    <h3>Manage Templates</h3>
                    <button class="icon-only" id="refreshTemplateListBtn" title="Refresh" type="button">
                        <svg class="btn-icon" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"
                             xmlns="http://www.w3.org/2000/svg">
                            <path d="M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8" stroke-linecap="round"
                                  stroke-linejoin="round"></path>
                            <path d="M21 3v5h-5" stroke-linecap="round" stroke-linejoin="round"></path>
                        </svg>
                    </button>
                </div>
                <div class="card-content">
                    <label for="templateSelector">Select or Create Template</label>
                    <select id="templateSelector" style="margin-bottom: 1rem;">
                        <option>-- Load Templates --</option>
                    </select>

                    <div id="create-template-form" class="hidden-view">
                        <form id="createTemplateFormInternal" data-scope="templates:write">
                            <label for="newTemplateNameInput">New Template Base Name</label>
                            <input id="newTemplateNameInput" placeholder="my-new-page" required
                                   style="margin-bottom: 0.5rem;">
                            <label for="template-extension" style="margin-bottom: 0.5rem;">Template Type</label>
                            <div class="extension-chooser">
                                <label><input type="radio" name="template-extension" value=".tmpl.html" checked> Full
                                    Template <span class="ext-mono">(.tmpl.html)</span></label>
                                <label><input type="radio" name="template-extension" value=".part.html"> Partial <span
                                            class="ext-mono">(.part.html)</span></label>
                            </div>
                            <small class="helper-text">Use Partials for reusable components like headers or
                                footers.</small>
                            <label for="newTemplateContent">Initial Content</label>
                            <textarea id="newTemplateContent"></textarea>
                            <button type="submit">Create Template</button>
                        </form>
                        <div class="template-actions" style="margin-top:1rem;">
                            <button type="button" id="testNewTemplateBtn" disabled>Test Unsaved</button>
                        </div>
                    </div>

                    <div id="edit-template-actions" class="hidden-view">
                        <form id="templateEditForm" data-scope="templates:write"
                              style="display:flex; flex-direction:column; flex-grow:1;">
                            <label for="templateContent">Template Content</label>
                            <textarea id="templateContent"></textarea>
                            <div class="template-actions">
                                <button type="submit">Save Changes</button>
                                <button id="testTemplateBtn" type="button">Test Unsaved</button>
                            </div>
                        </form>
                        <hr data-scope="templates:write">
                        <button type="button" class="danger" id="deleteTemplateBtn" data-scope="templates:write">Delete
                            Selected Template
                        </button>
                    </div>
                </div>
            </div>
            <div class="card hidden-view" id="template-preview-card">
                <div class="card-header">
                    <h3>Template Preview</h3>
                    <button type="button" class="icon-only" id="openPreviewNewTabBtn" title="Open in New Tab" disabled>
                        <svg class="btn-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                             stroke-width="1.5" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                  d="M13.5 6H5.25A2.25 2.25 0 0 0 3 8.25v10.5A2.25 2.25 0 0 0 5.25 21h10.5A2.25 2.25 0 0 0 18 18.75V10.5m-4.5 4.5V6H18"/>
                        </svg>
                    </button>
                </div>
                <div class="card-content">
                    <iframe id="template-preview-frame"></iframe>
                    <div class="preview-controls">
                        <label for="previewThreat">Threat Level:</label>
                        <input type="range" id="previewThreat" min="0" max="1000" value="1" style="flex-grow: 1;">
                        <span id="previewThreatValue" style="width: 4ch; text-align: right;">1</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
{{end}}


{{define "markovPage"}}
    <div class="content-wrapper">
        <div class="grid">
            <div class="card">
                <div class="card-header">
                    <h3>Manage Models</h3>
                    <div id="training-status-indicator" class="status-indicator-hidden">
                        <div class="spinner" style="width: 1em; height: 1em; border-width: 2px;"></div>
                        <span>Training...</span>
                    </div>
                    <button class="icon-only" id="refreshModelListBtn" title="Refresh" type="button">
                        <svg class="btn-icon" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"
                             xmlns="http://www.w3.org/2000/svg">
                            <path d="M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8" stroke-linecap="round"
                                  stroke-linejoin="round"></path>
                            <path d="M21 3v5h-5" stroke-linecap="round" stroke-linejoin="round"></path>
                        </svg>
                    </button>
                </div>
                <div class="card-content">
                    <label for="modelSelector">Select or Create Model</label>
                    <select id="modelSelector" style="margin-bottom: 1rem;">
                        <option>-- Load Models --</option>
                    </select>

                    <div id="create-model-form" class="hidden-view" data-scope="markov:write">
                        <form id="createModelFormInternal">
                            <h4>Create New Model</h4>
                            <label for="createModelName">New Model Name</label>
                            <input id="createModelName" placeholder="e.g., tech-docs" required>
                            <label for="createModelOrder">Model Order</label>
                            <input type="number" id="createModelOrder" value="2" required>
                            <button type="submit">Create Model</button>
                        </form>
                    </div>

                    <div id="existing-model-actions" class="hidden-view">
                        <form id="trainModelForm" data-scope="markov:write">
                            <label for="trainCorpusFile">Train with Corpus File (.txt)</label>
                            <input type="file" id="trainCorpusFile" accept=".txt" required>
                            <button type="submit">Train Selected Model</button>
                            <div class="form-status" id="trainModelStatus"></div>
                        </form>
                        <hr data-scope="markov:write">
                        <form id="pruneModelForm" data-scope="markov:write">
                            <label for="pruneMinFreq">Prune with Min Frequency</label>
                            <input type="number" id="pruneMinFreq" value="1" required>
                            <button type="submit">Prune Selected Model</button>
                        </form>
                        <hr>
                        <div style="display: flex; flex-direction: column; gap: 1rem;">
                            <button id="exportModelBtn" type="button">Export Selected Model</button>
                            <button class="danger" id="deleteModelBtn" type="button" data-scope="markov:write">Delete
                                Selected Model
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card" data-scope="markov:write">
                <div class="card-header"><h3>Global Actions</h3></div>
                <div class="card-content">
                    <form id="importModelForm">
                        <label for="importModelFile">Import Model from File (.json)</label>
                        <input type="file" id="importModelFile" accept=".json" required>
                        <button type="submit">Import Model</button>
                    </form>
                    <hr>
                    <form id="pruneVocabForm">
                        <label for="pruneVocabMinFreq">Prune Global Vocabulary</label>
                        <input type="number" id="pruneVocabMinFreq" value="2" required>
                        <button type="submit">Prune Vocabulary</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "authPage"}}
    <div class="content-wrapper">
        <div class="grid">
            <div class="card table-container">
                <div class="card-header">
                    <h3>Existing API Keys</h3>
                    <button class="icon-only" id="refreshKeysListBtn" title="Refresh" type="button">
                        <svg class="btn-icon" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"
                             xmlns="http://www.w3.org/2000/svg">
                            <path d="M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8" stroke-linecap="round"
                                  stroke-linejoin="round"></path>
                            <path d="M21 3v5h-5" stroke-linecap="round" stroke-linejoin="round"></path>
                        </svg>
                    </button>
                </div>
                <table id="keys-table" style="width:100%;">
                    <thead>
                    <tr>
                        <th>ID</th>
                        <th>Description</th>
                        <th>Scopes</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="card">
                <div class="card-header"><h3>Create New Key</h3></div>
                <div class="card-content">
                    <form id="createKeyForm">
                        <label for="createKeyDesc">Description</label>
                        <input id="createKeyDesc" required>
                        <div class="label-with-helpers">
                            <label>Scopes</label>
                            <div class="scope-helpers">
                                <a id="selectAllScopes">Select All</a>
                                <a id="deselectAllScopes">Deselect All</a>
                            </div>
                        </div>
                        <div id="scopes-container"></div>
                        <button type="submit">Create Key</button>
                    </form>
                    <div id="key-created-result">
                        <strong>Key Created! Copy it now, it will not be shown again.</strong>
                        <div class="key-display">
                            <input id="newKeyValue" readonly>
                            <button id="copyKeyBtn" type="button">Copy</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "serverPage"}}
    <div class="content-wrapper">
        <div class="page-header">
            <h2>Application Configuration</h2>
            <button type="button" id="configEditorToggleBtn">Switch to Raw JSON</button>
        </div>

        <form id="updateSimpleConfigForm">
            <div id="simple-config-editor-view">
                <div class="config-column-wrapper">
                    <div class="card">
                        <div class="card-header"><h3>Server Config</h3></div>
                        <div class="card-content">
                            <div id="server_config-editor"></div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header"><h3>Save Changes</h3></div>
                        <div class="card-content">
                            <p class="page-description">Changes saved here will overwrite `config.json` on disk. Some
                                changes may require a server restart to take effect.</p>
                            <button style="width:100%;" type="submit">Save & Apply Configuration</button>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header"><h3>Template Config</h3></div>
                    <div class="card-content">
                        <div id="template_config-editor"></div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header"><h3>Threat Config</h3></div>
                    <div class="card-content">
                        <div id="threat_config-editor"></div>
                    </div>
                </div>
            </div>
        </form>

        <div id="raw-config-editor-view" class="hidden-view">
            <div class="card" style="flex-grow:1;">
                <div class="card-content" style="display:flex; flex-direction:column; flex-grow:1;">
                    <form id="updateRawConfigForm" style="display:flex; flex-direction:column; flex-grow:1;">
                        <textarea id="appConfigText" required style="min-height: 500px;"></textarea>
                        <button id="updateConfigBtn" type="submit">Update & Save Config</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "applicationPage"}}
    <div class="content-wrapper" style="max-width: 800px;">
        <div class="card danger-card">
            <div class="card-header">
                <h3>
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                         stroke="currentColor" style="width:24px; height:24px;">
                        <path stroke-linecap="round" stroke-linejoin="round"
                              d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"/>
                    </svg>
                    Danger Zone
                </h3>
            </div>
            <div class="card-content" style="display:flex; flex-direction:column; gap: 1.5rem;">
                <div class="danger-zone-action">
                    <h4>Restart Server</h4>
                    <p class="page-description">This will gracefully restart the Sarracenia server process, reloading
                        the configuration from disk.</p>
                    <button type="button" class="warning" id="restartBtn">Restart Server</button>
                </div>
                <hr>
                <div class="danger-zone-action">
                    <h4>Shutdown Server</h4>
                    <p class="page-description">This will gracefully shut down the server process. It must be restarted
                        manually from the command line or service manager.</p>
                    <button type="button" class="danger" id="shutdownBtn">Shutdown Server</button>
                </div>
                <hr>
                <div class="danger-zone-action">
                    <h4>Reset All Statistics</h4>
                    <p class="page-description">This will permanently delete all collected IP and User Agent statistics
                        from the database. This action cannot be undone.</p>
                    <button type="button" class="danger" id="resetStatsBtn">Reset All Statistics</button>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "themesPage"}}
    <div class="content-wrapper">
        <div class="page-header">
            <h2>Themes</h2>
        </div>
        <div class="grid theme-grid">
            <div class="card theme-card" data-theme="default">
                <div class="theme-preview"></div>
                <h3>Default</h3>
            </div>
            <div class="card theme-card" data-theme="light">
                <div class="theme-preview"></div>
                <h3>Light</h3>
            </div>
            <div class="card theme-card" data-theme="dracula">
                <div class="theme-preview"></div>
                <h3>Dracula</h3>
            </div>
            <div class="card theme-card" data-theme="solarized">
                <div class="theme-preview"></div>
                <h3>Solarized</h3>
            </div>
            <div class="card theme-card" data-theme="nord">
                <div class="theme-preview"></div>
                <h3>Nord</h3>
            </div>
            <div class="card theme-card" data-theme="gruvbox">
                <div class="theme-preview"></div>
                <h3>Gruvbox</h3>
            </div>
            <div class="card theme-card" data-theme="catppuccin">
                <div class="theme-preview"></div>
                <h3>Catppuccin</h3>
            </div>
            <div class="card theme-card" data-theme="monokai">
                <div class="theme-preview"></div>
                <h3>Monokai</h3>
            </div>
            <div class="card theme-card" data-theme="one-dark">
                <div class="theme-preview"></div>
                <h3>One Dark</h3>
            </div>
            <div class="card theme-card" data-theme="tokyo-night">
                <div class="theme-preview"></div>
                <h3>Tokyo Night</h3>
            </div>
            <div class="card theme-card" data-theme="synthwave">
                <div class="theme-preview"></div>
                <h3>Synthwave</h3>
            </div>
            <div class="card theme-card" data-theme="solarized-light">
                <div class="theme-preview"></div>
                <h3>Solarized Light</h3>
            </div>
            <div class="card theme-card" data-theme="github-light">
                <div class="theme-preview"></div>
                <h3>GitHub Light</h3>
            </div>
            <div class="card theme-card" data-theme="vscode">
                <div class="theme-preview"></div>
                <h3>VSCode</h3>
            </div>
            <div class="card theme-card" data-theme="cyberpunk">
                <div class="theme-preview"></div>
                <h3>Cyberpunk</h3>
            </div>
            <div class="card theme-card" data-theme="sky">
                <div class="theme-preview"></div>
                <h3>Sky</h3>
            </div>
        </div>
    </div>
{{end}}